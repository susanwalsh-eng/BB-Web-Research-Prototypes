name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Cancel older, in-progress runs of this workflow
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: |
            BB Web - Research - July 2025/prototype-1/package-lock.json
            BB Web - Research - July 2025/prototype-2/package-lock.json

      - name: Install and Build Prototype 1
        working-directory: ./BB Web - Research - July 2025/prototype-1
        run: |
          npm ci
          NODE_ENV=production npm run build

      - name: Install and Build Prototype 2
        working-directory: ./BB Web - Research - July 2025/prototype-2
        run: |
          npm ci
          NODE_ENV=production npm run build

      - name: Prepare deployment artifact
        run: |
          echo "🚀 Assembling artifact..."

          # Clean and create directory structure
          rm -rf dist
          mkdir -p "dist/BB Web - Research - July 2025/prototype-1"
          mkdir -p "dist/BB Web - Research - July 2025/prototype-2"

          # Copy main index files if they exist
          if [ -f index.html ]; then cp index.html dist/; fi
          if [ -f "BB Web - Research - July 2025/index.html" ]; then
              cp "BB Web - Research - July 2025/index.html" "dist/BB Web - Research - July 2025/"
          fi

          # Copy the built output of each prototype
          echo "📦 Copying built prototypes..."
          cp -r "BB Web - Research - July 2025/prototype-1/out/." "dist/BB Web - Research - July 2025/prototype-1/"
          cp -r "BB Web - Research - July 2025/prototype-2/out/." "dist/BB Web - Research - July 2025/prototype-2/"

          # Copy image assets to root level for GitHub Pages
          echo "🖼️  Copying image assets for GitHub Pages..."
          mkdir -p "dist/forest-wines-dashboard"

          # Copy images from prototype 1
          if ls "dist/BB Web - Research - July 2025/prototype-1/"*.png 1> /dev/null 2>&1; then
              echo "   📋 Copying Prototype 1 images..."
              cp "dist/BB Web - Research - July 2025/prototype-1/"*.png "dist/forest-wines-dashboard/"
          fi

          # Copy images from prototype 2 (will merge/overwrite with prototype 1 images)
          if ls "dist/BB Web - Research - July 2025/prototype-2/"*.png 1> /dev/null 2>&1; then
              echo "   📋 Merging Prototype 2 images..."
              cp "dist/BB Web - Research - July 2025/prototype-2/"*.png "dist/forest-wines-dashboard/"
          fi

          # Prevent GitHub Pages from running Jekyll
          touch dist/.nojekyll

          echo "✅ Artifact ready!"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "dist"

  deploy:
    # This job only runs when the push is to the 'main' branch
    if: github.ref == 'refs/heads/main'
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
